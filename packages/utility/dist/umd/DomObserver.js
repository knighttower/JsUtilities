!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("DomObserver",[],t):"object"==typeof exports?exports.DomObserver=t():e.DomObserver=t()}(this,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var n in r){e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})}},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function r(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(!e){return}if("string"==typeof e){return n(e,t)}var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r){return Array.from(e)}if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)){return n(e,t)}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,u=!0,a=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){a=!0,f=e},f:function(){try{u||null==r.return||r.return()}finally{if(a){throw f}}}}}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++){n[r]=e[r]}return n}e.r(t),e.d(t,{DomObserver:()=>i,default:()=>i,domObserver:()=>i});var o={};!function(){if("undefined"!=typeof window){new MutationObserver((function(e){var t,n=r(e);try{for(n.s();!(t=n.n()).done;){if("childList"===t.value.type){for(var i in o){o[i]()}}}}catch(f){n.e(f)}finally{n.f()}})).observe(document.body,{childList:!0,subtree:!0})}}();var i={executeOnNodeChanged:o,addOnNodeChange:function(e,t){t&&(o[e]=t)},removeOnNodeChange:function(e){e&&delete o[e]},cleanup:function(){Object.keys(o).forEach((function(e){return delete o[e]}))}};return t})()));