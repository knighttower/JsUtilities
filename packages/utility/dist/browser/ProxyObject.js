(()=>{"use strict";var t={d:(e,r)=>{for(var n in r){t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})}},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};function r(t){return function(t){if(Array.isArray(t)){return n(t)}}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"]){return Array.from(t)}}(t)||function(t,e){if(t){if("string"==typeof t){return n(t,e)}var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++){n[r]=t[r]}return n}function o(t){var e=new Set(["_private"].concat(r(t._private||[]))),n=new Set(["_protected"].concat(r(e),r(t._protected||[]))),o=new Set(t._mutable||[]),c=function(t){return n.has(t)&&!o.has(t)?(console.error("Attempt to modify protected property: ".concat(t)),!1):!(e.has(t)&&!o.has(t))||(console.error("Attempt to modify private property: ".concat(t)),!1)};return new Proxy(t,{get:function(t,r,n){if(!e.has(r)){return Reflect.get(t,r,n)}console.error("Attempt to access private property: ".concat(r))},set:function(t,e,r,n){return!!c(e)&&Reflect.set(t,e,r,n)},deleteProperty:function(t,e){return!!c(e)&&Reflect.deleteProperty(t,e)},defineProperty:function(t,e,r){return!!c(e)&&Reflect.defineProperty(t,e,r)},ownKeys:function(t){return Reflect.ownKeys(t).filter((function(t){return!e.has(t)}))},enumerate:function(t){return Reflect.enumerate(t).filter((function(t){return!e.has(t)}))},has:function(t,r){return!e.has(r)&&Reflect.has(t,r)},getOwnPropertyDescriptor:function(t,r){if(!e.has(r)){return Reflect.getOwnPropertyDescriptor(t,r)}}})}t.d(e,{proxyObject:()=>o}),window.proxyObject=e.proxyObject})();