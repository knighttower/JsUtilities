// Default Module from: DomObserver
const DomObserver = require('./src/DomObserver.js');
// Default Module from: ElementHelper
const ElementHelper = require('./src/ElementHelper.js');
// Single Modules and Aliases from: PowerHelpers
const {
    PowerHelper,
    addQuotes,
    cleanStr,
    convertKeysToSymbols,
    findAndReplaceInArray,
    findNested,
    fixQuotes,
    getArrObjFromString,
    getDirectivesFromString,
    getMatchBlock,
    getChunks,
    getMatchInBetween,
    removeQuotes,
    startAndEndWith,
    setExpString,
    setLookUpExp,
    setWildCardString,
    wildCardStringSearch,
} = require('./src/PowerHelpers.js');
// Default Module from: PowerHelpers
const powerHelper = require('./src/PowerHelpers.js');
// Default Module from: ProxyHelper
const ProxyHelper = require('./src/ProxyHelper.js');
// Default Module from: UrlHelper
const UrlHelper = require('./src/UrlHelper.js');
// Single Modules and Aliases from: Utility
const {
    utils,
    utility,
    convertToBool,
    convertToNumber,
    currencyToDecimal,
    dateFormat,
    decimalToCurrency,
    emptyOrValue,
    formatPhoneNumber,
    getDynamicId,
    getRandomId,
    getGoogleMapsAddress,
    includes,
    isEmpty,
    isNumber,
    instanceOf,
    openGoogleMapsAddress,
    proxyObject,
    selectElement,
    toCurrency,
    toDollarString,
    typeOf,
    validateEmail,
    validatePhone,
} = require('./src/Utility.js');
// Default Module from: Utility
const Utility = require('./src/Utility.js');

module.exports = {
    DomObserver,
    ElementHelper,
    PowerHelper,
    addQuotes,
    cleanStr,
    convertKeysToSymbols,
    findAndReplaceInArray,
    findNested,
    fixQuotes,
    getArrObjFromString,
    getDirectivesFromString,
    getMatchBlock,
    getChunks,
    getMatchInBetween,
    removeQuotes,
    startAndEndWith,
    setExpString,
    setLookUpExp,
    setWildCardString,
    wildCardStringSearch,
    powerHelper,
    ProxyHelper,
    UrlHelper,
    utils,
    utility,
    convertToBool,
    convertToNumber,
    currencyToDecimal,
    dateFormat,
    decimalToCurrency,
    emptyOrValue,
    formatPhoneNumber,
    getDynamicId,
    getRandomId,
    getGoogleMapsAddress,
    includes,
    isEmpty,
    isNumber,
    instanceOf,
    openGoogleMapsAddress,
    proxyObject,
    selectElement,
    toCurrency,
    toDollarString,
    typeOf,
    validateEmail,
    validatePhone,
    Utility,
};
