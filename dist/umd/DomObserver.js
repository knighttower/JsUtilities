!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define("DomObserver",[],o):"object"==typeof exports?exports.DomObserver=o():e.DomObserver=o()}(self,(()=>(()=>{"use strict";var e={d:(o,t)=>{for(var r in t)e.o(t,r)&&!e.o(o,r)&&Object.defineProperty(o,r,{enumerable:!0,get:t[r]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const t={};(()=>{if("undefined"!=typeof window){const e={childList:!0,subtree:!0};new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e in t)t[e]()})).observe(document.body,e)}})();const r={executeOnNodeChanged:t,addOnNodeChange:(e,o)=>{o&&(t[e]=o)},removeOnNodeChange:e=>{e&&delete t[e]},cleanup:()=>{Object.keys(t).forEach((e=>delete t[e]))}};return o})()));